<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Debug_TransformCheckIfPageIsHomePage" xml:space="preserve">
    <value>Check if the transformed page is the web's home page</value>
  </data>
  <data name="Error_CrossSiteTransferTargetsNonModernSite" xml:space="preserve">
    <value>Page transformation for targeting non-modern sites is currently not supported</value>
  </data>
  <data name="Error_InvalidArgumentForAssetPersistenceProviderToken" xml:space="preserve">
    <value>Invalid content for parameter 'argument' of AssetPersistenceProviderToken</value>
  </data>
  <data name="Error_InvalidAssetStreamToPersist" xml:space="preserve">
    <value>The provided asset stream is not valid for persistence</value>
  </data>
  <data name="Error_InvalidTargetPageUri" xml:space="preserve">
    <value>The generated modern page does not have the expected URI.</value>
  </data>
  <data name="Error_MissingUserMappingProvider" xml:space="preserve">
    <value>Missing UserMappingProvider in current services configuration</value>
  </data>
  <data name="Error_PageNotOverwriteIfExists" xml:space="preserve">
    <value>The target page '{0}' already exists and overwrite is not configured</value>
  </data>
  <data name="Info_AddedClientSideWebPartToPage" xml:space="preserve">
    <value>Added '{0}' Client Side Web Part to target page</value>
  </data>
  <data name="Info_ContentUsingAddinWebPart" xml:space="preserve">
    <value>Using add-in web part '{0}'</value>
  </data>
  <data name="Info_ContentUsingModernWebPart" xml:space="preserve">
    <value>Using '{0}' modern web part</value>
  </data>
  <data name="Info_CreatedTextControl" xml:space="preserve">
    <value>Created new Text control</value>
  </data>
  <data name="Info_MappingRegularField" xml:space="preserve">
    <value>Mapping field '{0}'</value>
  </data>
  <data name="Info_MappingTaxonomyField" xml:space="preserve">
    <value>Mapping taxonomy field '{0}'</value>
  </data>
  <data name="Info_PageAlreadyExistsInTargetLocation" xml:space="preserve">
    <value>The page '{0}' already exists in target location</value>
  </data>
  <data name="Info_PublishMessage" xml:space="preserve">
    <value>Published by the PnP Transformation Framework</value>
  </data>
  <data name="Info_TransformArticleHeaderImageUrl" xml:space="preserve">
    <value>Image Url:</value>
  </data>
  <data name="Info_TransformArticleSetHeaderToCustom" xml:space="preserve">
    <value>Page Header Set to Custom. Using page header settings:</value>
  </data>
  <data name="Info_TransformArticleSetHeaderToDefault" xml:space="preserve">
    <value>Page Header Set to Default. Using page header default settings</value>
  </data>
  <data name="Info_TransformArticleSetHeaderToNone" xml:space="preserve">
    <value>Page Header Set to None. Removing the page header</value>
  </data>
  <data name="Info_TransformArticleSetHeaderToNoneWithAuthor" xml:space="preserve">
    <value>Setting page author in page header</value>
  </data>
  <data name="Info_TransformSourcePageAsArticlePage" xml:space="preserve">
    <value>Transforming source page as Article page</value>
  </data>
  <data name="Info_TransformSourcePageHomePageUsingStock" xml:space="preserve">
    <value>Using a stock homepage layout as the new homepage - not transforming page</value>
  </data>
  <data name="Info_UsingCustomModernWebPart" xml:space="preserve">
    <value>Using 'custom' modern web part</value>
  </data>
  <data name="Warning_ContentWarnModernNotFound" xml:space="preserve">
    <value>Modern web part not found</value>
  </data>
  <data name="Warning_NonCriticalErrorDuringPublish" xml:space="preserve">
    <value>There was a non critical issue during page update/publish. Returned error message: {0}</value>
  </data>
  <data name="Warning_PageHeaderAuthorNotSet" xml:space="preserve">
    <value>The page author header could not be set. Author '{0}' could not be resolved</value>
  </data>
  <data name="Warning_PageHeaderAuthorNotSetGenericError" xml:space="preserve">
    <value>The page author header could not be set. Error: '{0}'</value>
  </data>
  <data name="Warning_PostingAPageAsNewsRequiresPagePublishing" xml:space="preserve">
    <value>Posting a page as news requires the page to be published. Turning on the PublishCreatedPage flag</value>
  </data>
</root>